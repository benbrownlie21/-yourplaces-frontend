{"version":3,"file":"static/js/492.cc322922.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\r\n        Authorization: 'Bearer ' + auth.token\r\n      });\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload id=\"image\" onInput={inputHandler} />\r\n        <Button inverse type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n        <Button inverse to={`/${auth.userId}/places`}>\r\n            CANCEL\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please choose an image (Max 1.5mb)</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          CHOOSE AN IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport './Input.css'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE' :\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH': {\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        isTouched: false, \r\n        isValid: props.initialValid || false\r\n    });\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: 'CHANGE', \r\n            val: event.target.value, \r\n            validators:props.validators \r\n        });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        });\r\n    };\r\n\r\n    const element = \r\n        props.element === 'input' ? (\r\n            <input \r\n                id={props.id} \r\n                type={props.type} \r\n                placeholder={props.placeholder} \r\n                onChange={changeHandler}\r\n                onBlur={touchHandler} \r\n                value={inputState.value}\r\n            />\r\n        ) : ( \r\n            <textarea \r\n                id={props.id} \r\n                rows={props.rows || 3} \r\n                onChange={changeHandler}\r\n                onBlur={touchHandler} \r\n                value={inputState.value} \r\n            />\r\n        );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && \r\n            'form-control--invalid'}`}\r\n        >\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Input;","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE': \r\n        let formIsValid = true;\r\n        for (const inputId in state.inputs) {\r\n            if(!state.inputs[inputId]) {\r\n                continue;\r\n            }\r\n            if (inputId === action.inputId) {\r\n                formIsValid = formIsValid && action.isValid\r\n            } else {\r\n                formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n            }\r\n        }\r\n        return {\r\n            ...state,\r\n            inputs: {\r\n                ...state.inputs,\r\n                [action.inputId]: { value: action.value, isValid: action.isValid }\r\n            },\r\n            isValid: formIsValid\r\n        };\r\n    case 'SET_DATA':\r\n        return {\r\n            inputs: action.inputs,\r\n            isValid: action.formIsValid\r\n        };\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initalInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initalInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE', \r\n            value: value, \r\n            isValid: isValid, \r\n            inputId: id});\r\n    }, []);\r\n\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","title","value","isValid","address","description","image","_useForm2","_slicedToArray","formState","inputHandler","history","useHistory","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","process","Authorization","token","push","t0","stop","_x","apply","arguments","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","inverse","disabled","to","concat","userId","props","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","onClick","current","click","inputReducer","state","action","_objectSpread","val","validate","isTouched","_useReducer","useReducer","initialValue","initialValid","_useReducer2","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","_defineProperty","initalInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","_e2","_createForOfIteratorHelper","validator","trim","test"],"sourceRoot":""}