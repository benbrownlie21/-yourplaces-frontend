{"version":3,"file":"static/js/400.714c49f9.chunk.js","mappings":"iRAsIA,UAxHoB,WAChB,IAAMA,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GACxBC,GAAsDC,EAAAA,EAAAA,KAA9CC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MAAOC,EAAWJ,EAAXI,YAAaC,EAAUL,EAAVK,WACvCC,GAAsCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,GAAUC,EAAAA,EAAAA,MAAYD,QACtBE,GAAUC,EAAAA,EAAAA,MAGhBC,GAA+CC,EAAAA,EAAAA,GAAQ,CACnDC,MAAO,CACHC,MAAO,GACPC,SAAS,GAEbC,YAAa,CACTF,MAAO,GACPC,SAAS,KAEd,GAAME,GAAAb,EAAAA,EAAAA,GAAAO,EAAA,GATFO,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAEG,EAAWH,EAAA,IAW3CI,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEgBjC,EAAY,GAADkC,OAC/BC,4BAAiC,YAAAD,OAAW1B,IACjD,KAAD,EAFKqB,EAAYE,EAAAK,KAGlB7B,EAAesB,EAAaQ,OAC5BhB,EACI,CACIP,MAAO,CACHC,MAAOc,EAAaQ,MAAMvB,MAC1BE,SAAS,GAEbC,YAAa,CACTF,MAAOc,EAAaQ,MAAMpB,YAC1BD,SAAS,KAGjB,GACFe,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,kCAAAA,EAAAQ,OAAA,GAAAX,EAAA,kBAGT,kBArBe,OAAAJ,EAAAgB,MAAA,KAAAC,UAAA,KAsBhBlB,GACJ,GAAG,CAACvB,EAAaQ,EAASa,IAE1B,IAAMqB,EAAwB,eAAAC,GAAAlB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiB,EAAMC,GAAK,OAAAnB,EAAAA,EAAAA,KAAAI,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACjB,OAAvBY,EAAME,iBAAiBD,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAEbjC,EAAY,GAADkC,OACVC,4BAAiC,YAAAD,OAAW1B,GAC/C,QACAwC,KAAKC,UAAU,CACXnC,MAAOK,EAAU+B,OAAOpC,MAAMC,MAC9BE,YAAaE,EAAU+B,OAAOjC,YAAYF,QAE9C,CACI,eAAgB,mBAChBoC,cAAe,UAAY1D,EAAK2D,QAEtC,KAAD,EACD1C,EAAQ2C,KAAK,IAAM5D,EAAK6D,OAAS,WAAUR,EAAAb,KAAA,eAAAa,EAAAd,KAAA,EAAAc,EAAAR,GAAAQ,EAAA,iCAAAA,EAAAP,OAAA,GAAAK,EAAA,kBAElD,gBAjB6BW,GAAA,OAAAZ,EAAAH,MAAA,KAAAC,UAAA,KAmB9B,OAAI3C,GAEI0D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACnBF,EAAAA,EAAAA,KAACG,EAAAA,EAAc,MAKtBrD,GAAgBP,GAWjB6D,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAH,SAAA,EACXF,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAAC/D,MAAOA,EAAOgE,QAAS9D,KACjCH,GAAaQ,IACXsD,EAAAA,EAAAA,MAAA,QAAMH,UAAU,aAAaO,SAAUtB,EAAyBgB,SAAA,EAC5DF,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACFC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,6BACVC,QAASrD,EACTsD,aAAcpE,EAAYQ,MAC1B6D,cAAc,KAElBnB,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACFC,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,EAACM,EAAAA,EAAAA,IAAoB,IACjCJ,UAAU,mCACVC,QAASrD,EACTsD,aAAcpE,EAAYW,YAC1B0D,cAAc,KAElBnB,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACT,KAAK,SAASU,UAAW3D,EAAUH,QAAQ0C,SAAC,kBAGpDF,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACE,SAAO,EAACC,GAAE,IAAA9C,OAAMzC,EAAK6D,OAAM,WAAUI,SAAC,gBArCtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACnBF,EAAAA,EAAAA,KAACyB,EAAAA,EAAI,CAAAvB,UACDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6BAyCxB,C,0GC9HMwB,EAAe,SAACC,EAAOC,GACzB,OAAQA,EAAOhB,MACX,IAAK,SACD,OAAAiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOF,GAAK,IACRpE,MAAOqE,EAAOE,IACdtE,SAASuE,EAAAA,EAAAA,IAASH,EAAOE,IAAKF,EAAOd,cAE7C,IAAK,QACD,OAAAe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOF,GAAK,IACRK,WAAW,IAGnB,QACI,OAAOL,EAEnB,EA8DA,EA5Dc,SAAAM,GACV,IAAAC,GAA+BC,EAAAA,EAAAA,YAAWT,EAAc,CACpDnE,MAAO0E,EAAMf,cAAgB,GAC7Bc,WAAW,EACXxE,QAASyE,EAAMd,eAAgB,IACjCiB,GAAAvF,EAAAA,EAAAA,GAAAqF,EAAA,GAJKG,EAAUD,EAAA,GAAEE,EAAQF,EAAA,GAMnB1B,EAAgBuB,EAAhBvB,GAAIO,EAAYgB,EAAZhB,QACJ1D,EAAmB8E,EAAnB9E,MAAOC,EAAY6E,EAAZ7E,SAEfM,EAAAA,EAAAA,YAAU,WACNmD,EAAQP,EAAInD,EAAOC,EACvB,GAAG,CAACkD,EAAInD,EAAOC,EAASyD,IAExB,IAAMsB,EAAgB,SAAAlD,GAClBiD,EAAS,CACL1B,KAAM,SACNkB,IAAKzC,EAAMmD,OAAOjF,MAClBuD,WAAWmB,EAAMnB,YAEzB,EAEM2B,EAAe,WACjBH,EAAS,CACL1B,KAAM,SAEd,EAEMD,EACgB,UAAlBsB,EAAMtB,SACFX,EAAAA,EAAAA,KAAA,SACIU,GAAIuB,EAAMvB,GACVE,KAAMqB,EAAMrB,KACZ8B,YAAaT,EAAMS,YACnBC,SAAUJ,EACVK,OAAQH,EACRlF,MAAO8E,EAAW9E,SAGtByC,EAAAA,EAAAA,KAAA,YACIU,GAAIuB,EAAMvB,GACVmC,KAAMZ,EAAMY,MAAQ,EACpBF,SAAUJ,EACVK,OAAQH,EACRlF,MAAO8E,EAAW9E,QAI9B,OACI6C,EAAAA,EAAAA,MAAA,OAAKH,UAAS,gBAAAvB,QAAmB2D,EAAW7E,SAAW6E,EAAWL,WAC9D,yBAA0B9B,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,SAAO8C,QAASb,EAAMvB,GAAGR,SAAE+B,EAAMpB,QAChCF,GACC0B,EAAW7E,SAAW6E,EAAWL,YAAahC,EAAAA,EAAAA,KAAA,KAAAE,SAAI+B,EAAMjB,cAGtE,C,4ECrEA,EARa,SAAAiB,GACX,OACEjC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,QAAAvB,OAAUuD,EAAMhC,WAAa8C,MAAOd,EAAMc,MAAM7C,SAC3D+B,EAAM/B,UAGb,C,kGCRM8C,EAAc,SAACrB,EAAOC,GACxB,OAAQA,EAAOhB,MACX,IAAK,eACL,IAAIqC,GAAc,EAClB,IAAK,IAAMC,KAAWvB,EAAMjC,OACpBiC,EAAMjC,OAAOwD,KAIbD,EADAC,IAAYtB,EAAOsB,QACLD,GAAerB,EAAOpE,QAEtByF,GAAetB,EAAMjC,OAAOwD,GAAS1F,SAG3D,OAAAqE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOF,GAAK,IACRjC,QAAMmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCF,EAAMjC,QAAM,IAAAyD,EAAAA,EAAAA,GAAA,GACdvB,EAAOsB,QAAU,CAAE3F,MAAOqE,EAAOrE,MAAOC,QAASoE,EAAOpE,WAE7DA,QAASyF,IAEjB,IAAK,WACD,MAAO,CACHvD,OAAQkC,EAAOlC,OACflC,QAASoE,EAAOqB,aAExB,QACI,OAAOtB,EAEf,EAEatE,EAAU,SAAC+F,EAAcC,GAClC,IAAAnB,GAA8BC,EAAAA,EAAAA,YAAWa,EAAa,CAClDtD,OAAQ0D,EACR5F,QAAS6F,IACXjB,GAAAvF,EAAAA,EAAAA,GAAAqF,EAAA,GAHKvE,EAASyE,EAAA,GAAEE,EAAQF,EAAA,GAsB1B,MAAO,CAACzE,GAjBa2F,EAAAA,EAAAA,cAAY,SAAC5C,EAAInD,EAAOC,GACzC8E,EAAS,CACL1B,KAAM,eACNrD,MAAOA,EACPC,QAASA,EACT0F,QAASxC,GACjB,GAAG,KAGiB4C,EAAAA,EAAAA,cAAY,SAACC,EAAWC,GACxClB,EAAS,CACL1B,KAAM,WACNlB,OAAQ6D,EACRN,YAAaO,GAErB,GAAG,IAGP,C,6IC1DA,IAAMC,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhB7C,EAAoB,WAAH,MAAU,CAAEH,KAAM6C,EAAwB,EAE3DrC,EAAsB,SAAAU,GAAG,MAAK,CACzClB,KAAM8C,EACN5B,IAAKA,EACN,EAOY+B,EAAkB,WAAH,MAAU,CAAEjD,KAAMgD,EAAsB,EAEvD7B,EAAW,SAACxE,EAAOuD,GAC9B,IACkCgD,EAD9BtG,GAAU,EAAKuG,ECtBN,SAAoCC,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,EAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEQ,OAAqB,CAC/GN,IAAIF,EAAIE,GACZ,IAAIO,EAAI,EACJC,EAAI,WAAc,EACtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKT,EAAEQ,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNtH,MAAOyG,EAAES,KAEb,EACAK,EAAG,SAAWC,GACZ,MAAMA,CACR,EACAC,EAAGN,EAEP,CACA,MAAM,IAAIO,UAAU,wIACtB,CACA,IAEEC,EAFEC,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLT,EAAG,WACDT,EAAKA,EAAGmB,KAAKrB,EACf,EACAY,EAAG,WACD,IAAIU,EAAOpB,EAAGzF,OAEd,OADA0G,EAAmBG,EAAKT,KACjBS,CACT,EACAR,EAAG,SAAWS,GACZH,GAAS,EACTF,EAAMK,CACR,EACAP,EAAG,WACD,IACOG,GAAoC,MAAhBjB,EAAW,QAAWA,EAAW,QAC5D,CAAE,QACA,GAAIkB,EAAQ,MAAMF,CACpB,CACF,EAEJ,CD5BqBM,CACK1E,GAAU,IAAlC,IAAAiD,EAAAY,MAAAb,EAAAC,EAAAa,KAAAC,MAAoC,CAAC,IAA1BY,EAAS3B,EAAAvG,MACdkI,EAAU7E,OAAS6C,IACrBjG,EAAUA,GAAWD,EAAMmI,OAAOlB,OAAS,GAEzCiB,EAAU7E,OAAS8C,IACrBlG,EAAUA,GAAWD,EAAMmI,OAAOlB,QAAUiB,EAAU3D,KAEpD2D,EAAU7E,OAAS+C,IACrBnG,EAAUA,GAAWD,EAAMmI,OAAOlB,QAAUiB,EAAU3D,KA7BjC,QA+BnB2D,EAAU7E,OACZpD,EAAUA,IAAYD,GAASkI,EAAU3D,KA/BpB,QAiCnB2D,EAAU7E,OACZpD,EAAUA,IAAYD,GAASkI,EAAU3D,KAEvC2D,EAAU7E,OAASgD,IACrBpG,EAAUA,GAAW,iBAAiBmI,KAAKpI,GAE/C,CAAC,OAAA2H,GAAAnB,EAAAe,EAAAI,EAAA,SAAAnB,EAAAiB,GAAA,CACD,OAAOxH,CACT,C","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport './PlaceForm.css'\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\n\r\nconst UpdatePlace = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [loadedPlace, setLoadedPlace] = useState();\r\n    const placeId = useParams().placeId;\r\n    const history = useHistory();\r\n\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false)\r\n\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n                );\r\n                setLoadedPlace(responseData.place);\r\n                setFormData(\r\n                    {\r\n                        title: {\r\n                            value: responseData.place.title,\r\n                            isValid: true\r\n                        },\r\n                        description: {\r\n                            value: responseData.place.description,\r\n                            isValid: true\r\n                        }\r\n                    }, \r\n                    true\r\n                );\r\n\r\n            } catch (err) {}\r\n        };\r\n        fetchPlace();\r\n    }, [sendRequest, placeId, setFormData]);\r\n\r\n    const placeUpdateSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, \r\n                'PATCH', \r\n                JSON.stringify({\r\n                    title: formState.inputs.title.value,\r\n                    description: formState.inputs.description.value\r\n                }),\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            history.push('/' + auth.userId + '/places')\r\n        } catch (err) {}\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    };\r\n\r\n    if (!loadedPlace && !error) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>Could not find place!</h2>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {!isLoading && loadedPlace && (\r\n                <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n                    <Input \r\n                        id=\"title\" \r\n                        element=\"input\"\r\n                        type=\"text\"\r\n                        label=\"Title\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please enter a valid title\"\r\n                        onInput={inputHandler}\r\n                        initialValue={loadedPlace.title}\r\n                        initialValid={true}\r\n                    />\r\n                    <Input \r\n                        id=\"description\" \r\n                        element=\"textarea\"\r\n                        label=\"Description\"\r\n                        validators={[VALIDATOR_MINLENGTH(5)]}\r\n                        errorText=\"Please enter a valid description\"\r\n                        onInput={inputHandler}\r\n                        initialValue={loadedPlace.description}\r\n                        initialValid={true}\r\n                    />\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        UPDATE PLACE\r\n                    </Button>\r\n                    <Button inverse to={`/${auth.userId}/places`}>\r\n                        BACK\r\n                    </Button>\r\n                </form>)}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default UpdatePlace;","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport './Input.css'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE' :\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH': {\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        isTouched: false, \r\n        isValid: props.initialValid || false\r\n    });\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: 'CHANGE', \r\n            val: event.target.value, \r\n            validators:props.validators \r\n        });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        });\r\n    };\r\n\r\n    const element = \r\n        props.element === 'input' ? (\r\n            <input \r\n                id={props.id} \r\n                type={props.type} \r\n                placeholder={props.placeholder} \r\n                onChange={changeHandler}\r\n                onBlur={touchHandler} \r\n                value={inputState.value}\r\n            />\r\n        ) : ( \r\n            <textarea \r\n                id={props.id} \r\n                rows={props.rows || 3} \r\n                onChange={changeHandler}\r\n                onBlur={touchHandler} \r\n                value={inputState.value} \r\n            />\r\n        );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && \r\n            'form-control--invalid'}`}\r\n        >\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE': \r\n        let formIsValid = true;\r\n        for (const inputId in state.inputs) {\r\n            if(!state.inputs[inputId]) {\r\n                continue;\r\n            }\r\n            if (inputId === action.inputId) {\r\n                formIsValid = formIsValid && action.isValid\r\n            } else {\r\n                formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n            }\r\n        }\r\n        return {\r\n            ...state,\r\n            inputs: {\r\n                ...state.inputs,\r\n                [action.inputId]: { value: action.value, isValid: action.isValid }\r\n            },\r\n            isValid: formIsValid\r\n        };\r\n    case 'SET_DATA':\r\n        return {\r\n            inputs: action.inputs,\r\n            isValid: action.formIsValid\r\n        };\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initalInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initalInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE', \r\n            value: value, \r\n            isValid: isValid, \r\n            inputId: id});\r\n    }, []);\r\n\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","_useForm","useForm","title","value","isValid","description","_useForm2","formState","inputHandler","setFormData","useEffect","fetchPlace","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","concat","process","sent","place","t0","stop","apply","arguments","placeUpdateSubmitHandler","_ref2","_callee2","event","_context2","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","_x","_jsx","className","children","LoadingSpinner","_jsxs","React","ErrorModal","onClear","onSubmit","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","inverse","to","Card","inputReducer","state","action","_objectSpread","val","validate","isTouched","props","_useReducer","useReducer","_useReducer2","inputState","dispatch","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","formReducer","formIsValid","inputId","_defineProperty","initalInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","_e2","_createForOfIteratorHelper","validator","trim","test"],"sourceRoot":""}